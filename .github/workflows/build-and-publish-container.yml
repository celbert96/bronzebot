name: build-and-publish-container.yml

env:
  DOTNET_VERSION: '8.0.x'
  
on:
  push:
    branches:
      - main
  workflow_dispatch: 

jobs:
  push-store-image:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@main
        
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: 'Setup python'
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: 'Setup git username and email'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: 'Update Application Version'
        run: |
          pip install semver
          VER=$(python3 ./.github/workflows/scripts/update-app-version.py --file ./BronzeBot/BronzeBot.csproj --build-type=PATCH)
          echo "NEW_VERSION=$VER" >> $GITHUB_ENV
          git add --all
          git commit -m "automated version update to $VER"
          git push

          
      - name: 'Build Image'
        run: |
          docker build -f ./BronzeBot/Dockerfile . -t ghcr.io/celbert96/bronzebot:latest -t ghcr.io/celbert96/bronzebot:${{env.NEW_VERSION}}
          docker push ghcr.io/celbert96/bronzebot --all-tags

      - name: Checkout Helm Repository
        uses: actions/checkout@main
        with:
          repository: celbert96/bronzebot-helm
          path: helm-repository

      - name: Update Helm Version
        run: |
          pip install semver pyyaml
          cd $GITHUB_WORKSPACE/helm-repository
          python3 $GITHUB_WORKSPACE/.github/workflows/scripts/update-helm-version.py --file bronzebot/Chart.yaml --app-version ${{env.NEW_VERSION}}
          git add --all
          git commit -m "updated helm chart version"
          git push
        
